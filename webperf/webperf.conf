#Load DNS cache from file: e.g. rootservers.cache
dns.loadCache
#Priority of A and AAAA records in query process: v4, v6, v4v6, v6v4, or default
dns.networkPreference
#Records type of query question: v4 for A records, v6 for AAAA records
dns.queryType
#Set recursive flag in queries: true/false
dns.recurse
#Load list of recursive name servers from file formatted like /etc/resolv.conf
dns.resolvconf
#DNS query timeouts (ms) and max number of retransmits
#Example: dns.timeout=1000 2000 3000 4000
dns.timeout
#CA bundle for verifying SSL certificates
http.CAFile
#HTTP TCP connect timeout
http.connectTimeout
#HTTP request headers
#Example: http.header=Cache-Control: no-cache
http.header
#Maximum number of simultaneous HTTP connections.
http.maxConnections
#Maximum number of simultaneous HTTP connections per domain.
http.maxDomainConnections
#Maximum number of request to pipeline at a time
http.maxPipelining
#Maximum number of download retries.
http.maxRetries
#Allow persistent connections
http.persistentConnections
#Allow pipelining of requests
http.pipelining
#HTTP receive timeout
http.recvTimeout
#Save HTTP response bodies to this locations. File name will be <location>/<hash of URL>
http.saveBody
#HTTP transmit timeout
http.sendTimeout

#The following is a list of metrics to include in the test output when JSON format is used.
#IPv4 address of lookup result
stats.dns.answerA
#IPv6 address of lookup result
stats.dns.answerAAAA
#TTL of IPv6 lookup result 
stats.dns.answerAAAATTL
#TTL of IPv4 address of lookup result
stats.dns.answerATTL
#When did the DNS lookup begin
stats.dns.beginResolve
#How many bytes were received during the DNS lookup
stats.dns.dataReceived
#How many bytes were sent during the DNS lookup
stats.dns.dataSent
#How long did the DNS lookup take including processing of responses (ms)
stats.dns.executionTime
#The query name (hostname) of the last transmitted query.
stats.dns.finalQueryName
#Number of messages received during lookup
stats.dns.messagesReceived
#Number of messages sent during lookup
stats.dns.messagesSent
#Sum of query RTTs of successful queries. Timeouts are not included.
stats.dns.networkTime
#Number of A records in answers section of final response.
stats.dns.nrofAnswersA
#Number of AAAA records in answers section of final response.
stats.dns.nrofAnswersAAAA
#Number of distinct query names resolved during the lookup.
stats.dns.queries
#The original query name of lookup
stats.dns.queryName
#The return code of the lookup process
stats.dns.returnCode
#Trace of all messages exchanged during lookup.
stats.dns.trace
#Include ALL HTTP response headers in output
stats.http.allHeaders
#When did the client begin connecting to remote server
stats.http.beginConnect
#Reponse used chunked encoding
stats.http.chunkedEncoding
#The request was sent over a reused connection (persistent connections).
stats.http.connectionReused
#The time it too to establish the TCP connection including optional SSL handshake (ms).
stats.http.connectTime
#The time to perform SSL handshake.
stats.http.connectTimeSSL
#The content-type header of HTTP response
stats.http.contentType
#The date header of HTTP response
stats.http.date
#The domain part of the target URL
stats.http.domain
#The body size of the HTTP response.
stats.http.downloadSize
#The download size: from request sent to last byte received.
stats.http.downloadTime
#The time from beginning of page download until the element was completed.
#This includes queing delay in HURL too.
stats.http.readyTime
#Header and encoding overhead of HTTP response, e.g. extra bytes needed for chunked encoding.
stats.http.overhead
#Expiry header of HTTP response
stats.http.expiryDate
#Specific HTTP response header to include in output.
#Example: stats.http.header=content-length
stats.http.header
#Size of HTTP response header (bytes).
stats.http.headerSize
#Path part of target URL
stats.http.path
#Was the request pipelined
stats.http.pipelined
#Port of target URL
stats.http.port
#URL of HTTP redirect
stats.http.redirectURL
#When was HTTP request sent
stats.http.requestSent
#HTTP response code, e.g. 200, 404, 500
stats.http.responseCode
#TCP statistics extracted from socket.
stats.http.TCPStats
#Was TLS used
stats.http.TLS
#Maximum length of URLs in output. 0 = unlimited, x > 0 : Only the first x characters are included
stats.http.URLLength
#Should the test print output even if it fails
test.alwaysPrintOutput
#Read target URLs from this file
test.loadURLs
#Output format of test: 1 = CSV for SamKnows, 2 = JSON, 3 = Print both. JSON first then CSV.
test.outputFormat
#Test tag for identification
test.tag
#Execution timeout of test (seconds). This is a dead man's switch in case of bugs.
test.timeout
#Unix timestamp to be included in output.
#Example: test.timestamp=now sets current system time
#Example: test.timestamp=12345
test.timestamp
